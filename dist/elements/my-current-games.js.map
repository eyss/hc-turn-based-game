{"version":3,"file":"my-current-games.js","sourceRoot":"","sources":["../../src/elements/my-current-games.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { contextProvided } from '@lit-labs/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\n\nimport {\n  Card,\n  List,\n  ListItem,\n  Icon,\n  Button,\n  CircularProgress,\n} from '@scoped-elements/material-web';\nimport { StoreSubscriber } from 'lit-svelte-stores';\nimport { AgentAvatar } from '@holochain-open-dev/profiles';\n\nimport { sharedStyles } from '../shared-styles';\nimport { turnBasedGameStoreContext } from '../context';\nimport { TurnBasedGameStore } from '../turn-based-game-store';\n\nexport class MyCurrentGames extends ScopedElementsMixin(LitElement) {\n  @contextProvided({ context: turnBasedGameStoreContext })\n  _store!: TurnBasedGameStore<any>;\n\n  @state()\n  loading = true;\n\n  _knownProfiles = new StoreSubscriber(\n    this,\n    () => this._store.profilesStore.knownProfiles\n  );\n\n  _myGames = new StoreSubscriber(this, () => this._store.myGames);\n\n  nicknameOf(agent: AgentPubKeyB64) {\n    return this._knownProfiles.value[agent].nickname;\n  }\n\n  async firstUpdated() {\n    await this._store.fetchMyCurrentGames();\n\n    this.loading = false;\n  }\n\n  renderGames() {\n    if (Object.keys(this._myGames.value).length === 0)\n      return html`<div class=\"column center-content\" style=\"flex: 1;\">\n        <span class=\"placeholder\" style=\"margin: 16px;\"\n          >You are not playing any game at the moment</span\n        >\n      </div>`;\n\n    return html`<div class=\"flex-scrollable-parent\">\n      <div class=\"flex-scrollable-container\">\n        <div class=\"flex-scrollable-y\">\n          <mwc-list noninteractive>\n            ${Object.entries(this._myGames.value).map(\n              ([hash, game]) =>\n                html` <div class=\"row center-content\">\n                  <mwc-list-item twoline style=\"flex: 1;\" graphic=\"avatar\">\n                    <agent-avatar\n                      slot=\"graphic\"\n                      .agentPubKey=${this._store.opponent(game)}\n                    ></agent-avatar>\n\n                    <span>${this.nicknameOf(this._store.opponent(game))} </span>\n                    <span slot=\"secondary\"\n                      >Started at\n                      ${new Date(game.created_at).toLocaleString()}</span\n                    >\n                  </mwc-list-item>\n                  <mwc-button\n                    label=\"OPEN\"\n                    @click=${() =>\n                      this.dispatchEvent(\n                        new CustomEvent('open-game', {\n                          detail: {\n                            gameHash: hash,\n                          },\n                          composed: true,\n                          bubbles: true,\n                        })\n                      )}\n                  ></mwc-button>\n                </div>`\n            )}\n          </mwc-list>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  render() {\n    if (!this._myGames.value)\n      return html`<div class=\"container\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n\n    return html`\n      <mwc-card style=\"flex: 1; min-width: 270px;\">\n        <div class=\"column\" style=\"margin: 16px; flex: 1;\">\n          <span class=\"title\">Current Games</span>\n          ${this.renderGames()}\n        </div>\n      </mwc-card>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'agent-avatar': AgentAvatar,\n      'mwc-icon': Icon,\n      'mwc-card': Card,\n      'mwc-list': List,\n      'mwc-button': Button,\n      'mwc-list-item': ListItem,\n      'mwc-circular-progress': CircularProgress,\n    };\n  }\n\n  static styles = [sharedStyles];\n}\n"]}